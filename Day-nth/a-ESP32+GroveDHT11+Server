/* 
  * ESP32 Web Server using Grove-DHT11- STATION Mode
  * -bila dah berjay upload ke esp32, 
  * buka Serial Monitor & pastikan sama 
  * ada berjaya sambung ke AP atau x... 
  * -bila berjaya join AP, esp32 akan dpt IP add 
  * released by AP.
  * -buka browser & type ip addres tersebut.
  * -pastikan ianya berada di dalam network segment yg sama.
  * Don't power up the Grove-DHT11 while uploading the sketch.....
*/
//===============================================================
// Load Libraries
//===============================================================

#include <WiFi.h> 
#include <WebServer.h>
#include <ESPmDNS.h>


///////////////////////////
#include "DHT.h"
#define DHTTYPE DHT11   // DHT 11

#define DHTPIN 2     // what pin we're connected to（DHT10 and DHT20 don't need define it）
DHT dht(DHTPIN, DHTTYPE);   //   DHT11 DHT21 DHT22
///////////////////////////
//===============================================================
// Initialization
//===============================================================

// enter your network credentials
const char* ssid = "ua123";
const char* password = "123456788";

// port 80 is default website port
WebServer server(80);  

//===============================================================
// Setup Function
//===============================================================

void setup() {
  Serial.begin(115200);
  Serial.print("Connecting to: ");
  Serial.println(ssid);

  // set ESP32 mode
  // WiFi.mode(mode);   
  
  // ESP32 will connect to your WiFi modem with SSID & PASSWORD
  WiFi.begin(ssid, password);  

  // wait until ESP32 connect to WiFi
  while (WiFi.status() != WL_CONNECTED) {
  delay(1000);
  Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi connected successfully");
  Serial.print("Your ESP32 IP: ");
  
  // display "ESP32 IP Address" at Serial Monitor
  Serial.println(WiFi.localIP());  

 ///////////////////////////
  Wire.begin();
  dht.begin();
 ///////////////////////////

  // set up mDNS responder:
  // "http://esp32.local" instead of "http://IPaddress"
  if (MDNS.begin("esp32")) {
    Serial.println("MDNS responder started");
  }
  
   // attach handles
  server.on("/", handle_root); 
  
  // start web server
  server.begin();
  Serial.println("HTTP server started");
  delay(100); 

  // print key WiFi diagnostic information
  WiFi.printDiag(Serial);
 
 // print the received signal strength:
  long rssi = WiFi.RSSI();
  Serial.print("RSSI:");
  Serial.println(rssi); //// kekuatan signal antara esp32 & access point
    
} // end of void setup( ) function

//===============================================================
// Loop Function
//===============================================================

void loop() {
  // monitors the presence of a client 
  // and delivers the requested HTML page
  
  server.handleClient(); //// cari function String SendHTML() {}
  
  
} //end of loop function

//===============================================================
// Other Functions
//===============================================================

// Handle root url (/)
void handle_root() {
  server.send(200, "text/html", SendHTML()); 
}


// HTML & CSS contents which display on web server
// park your GPIO activities in "SendHtml( )" function
String SendHTML( ){
  // returns the number of milliseconds that 
  // your ESP32 board since powered up, 
  // & become zero when reset or unplugged
  int sec = millis() / 1000;
  int min = sec / 60;
  int hr = min / 60;
  ///////////////////////////
  float temp_hum_val[2] = {0}; // grove_dht set nilai 2 array = 0
  dht.readTempAndHumidity(temp_hum_val); // baca temp & humid
  ///////////////////////////
  String ptr = "<!DOCTYPE html> <html>\n";
  ptr +="<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n";
  ptr +="<title>ESP32 Web Page</title>\n";
  ptr +="<meta http-equiv=refresh content=5>\n";
  ptr +="<style>html { font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;}\n";
  ptr +="body{margin-top: 50px;} h1 {color: #444444;margin: 50px auto 30px;}\n";
  ptr +="p {font-size: 24px;color: #444444;margin-bottom: 10px;}\n";
  ptr +="</style>\n";
  ptr +="</head>\n";
  ptr +="<body>\n";
  ptr +="<div id=\"webpage\">\n";
  ptr += "Server Up Time: <b>";
  ptr += hr;
  ptr += "h:";
  ptr += min % 60;
  ptr += "m:";
  ptr +=  sec % 60;
  ptr += "s </b>\n";
  ptr +="<h1>INSTITUT LATIHAN PERINDUSTRIAN SELANDAR</h1>\n";
  ptr +="<h1>Server Room Monitoring System</h1>\n";
  ptr +="<h2>ID: dc#1a</h2>\n"; // Sensor perlu ada unik ID supaya kita tau lokasi & senang utk kesan. 
  ptr +="<p>Temperature: ";
  ///////////////////////////
  ptr +=temp_hum_val[1]; // grove_dht-> [1] utk temperature
  ///////////////////////////
  ptr +=" ";
  ptr +=char(176); // simbol darjah
  ptr +="C</p>";
  ptr +="<p>Humidity: ";
  ///////////////////////////
  ptr +=temp_hum_val[0]; // grove_dht-> [0] utk humidity
  ///////////////////////////
  ptr +="%</p>";
  ptr +="</div>\n";
  ptr +="</body>\n";
  ptr +="</html>\n";
  /////// utk kluar d serial monitor
  Serial.print("Temperature: ");
  Serial.print(temp_hum_val[1]);
  Serial.print("C & Humidity: ");
  Serial.println(temp_hum_val[0]);
  
  return ptr;
}
